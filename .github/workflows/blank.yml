# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  filter_schema_modifications:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      schema_change: ${{ steps.schema_changes.outputs.SCHEMACHANGED }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Modified files
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
      - name: Filter changed files
        run: |
          cat $HOME/files.json
          echo '${{ steps.file_changes.outputs.files }}'
      - name: Schema changes
        id: schema_changes #grep -o .xml files.json | wc -w (for counting multiple instances per line)
        run: |
          egrep -ci "DocProperty.xml|DocQuantity.xml" $HOME/files.json
          countPropsQuantSets=$?
          grep -ciF ".xml" $HOME/files.json
          countXmls=$?
          if [[ $HOME/files.json ]] && [[ $(($count_xmls-$count_props_quant_sets)) -gt 0 ]]; then
            echo 'Schema changed.';
            echo ::set-output name=SCHEMACHANGED::true;
          else
            echo 'Schema did not change.';
            echo ::set-output name=SCHEMACHANGED::false;
          fi   
  generate-schema:
    runs-on: windows-latest
    needs: filter_schema_modifications
    if: ${{ needs.filter_schema_modifications.outputs.schema_change == 'true' }}
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Verify the workspace context
        run: echo 'Workspace directory is ${{ github.workspace }}'
